====================================================================================================
A Quick Tour
====================================================================================================
匹配语言算数运算
    tour/ExprJoyRide.java
    tour/Expr.g4
    tour/LibExpr.g4
    tour/CommonLexerRules.g4
计算器
    tour/LabeledExpr.g4         // antlr4  -no-listener  -visitor  LabeledExpr.g4
    tour/Calc.java
    tour/EvalVisitor.java    // 实现计算器的逻辑
接口生成器（输入为java类文件，生成接口文件）
    tour/Demo.java          // 用来作为输入
    tour/IDemo.java         // 输出的结果
    tour/ExtractInterfaceTool.java          // 运行程序，用ExtractInterfaceListener来walk语法树
    tour/ExtractInterfaceListener.java      // （关键程序）
获取文件的某一列(语义断言、或者叫语义谓词)
    tour/Col.java
    tour/Rows.g4
    tour/t.rows
类似于解码erlang外部格式的程序（数据包解码，同样使用语义谓词）
    tour/Data.g4 (不需要额外的java代码)
    tour/t.data
用词法模式（Lexical modes）来解析多种语言的文件（以XML为例）
    tour/XMLLexer.g4
    tour/t.xml //测试文件
用Rewriter（TokenStreamRewriter）来为文件插入信息（输入为java类文件，输出为带序列化ID的java类文件）
    tour/Java.g4
    tour/InsertSerialID
    tour/InsertSerialIDListener

====================================================================================================
Designing Grammars
====================================================================================================
测试匹配字符串(比匹配注释更难哦)
    lexcial_test/StringTest.g4

====================================================================================================
Exploring Some Real Grammars
====================================================================================================
解析CSV
    example/CSV.g4
JSON官网 http://json.org 提供的例子
    example/JSON.g4
    example/t.json
DOT语言(略)
    example/DOT.g4
Cymbol语言(略)
    example/Cymbol.g4
R语言(略)      这个例子有完整的十六进制和十进制转义字符的匹配规则
    example/R.g4
    example/t.R
    example/TestR.java

====================================================================================================
Implementing Applications with Visitors
====================================================================================================
属性阅读器(listener版本)
    listeners/TestPropertyFile.java
    listeners/PropertyFile.g4
    listeners/t.properties
属性阅读器(vistor版本)     // 用antlr4 -visitor
    listeners/TestPropertyFileVisitor.java
    listeners/PropertyFile.g4
    listeners/t.properties
简单计算器(非Labeling版本)
    listeners/Expr.g4
    listeners/TestEvaluator.java
简单计算器(Labeling版本)
    listeners/LExpr.g4
    listeners/TestLEvaluator.java(基于Stack的实现,有点恶心)
    listeners/TestLEvalVisitor.java(Labeling,基于Visitor的返回值,直观且简单的实现)
    listeners/TestLEvaluatorWithProps.java(Labeling,直观且简单的实现)



